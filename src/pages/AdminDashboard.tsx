import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { supabase } from '@/integrations/supabase/client';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';
import { Eye, Trash2, Users, FileText, BarChart3, X } from 'lucide-react';
import CompleteSurveyViewer from '@/components/admin/CompleteSurveyViewer';

const AdminDashboard = () => {
  const [responses, setResponses] = useState([]);
  const [selectedResponse, setSelectedResponse] = useState(null);
  const [isViewerOpen, setIsViewerOpen] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [adminData, setAdminData] = useState(null);
  const navigate = useNavigate();
  const { toast } = useToast();

  useEffect(() => {
    const checkAuth = async () => {
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        navigate('/admin-login');
        return;
      }

      const { data: adminUser } = await supabase
        .from('admin_users')
        .select('*')
        .eq('auth_user_id', session.user.id)
        .single();
      
      if (!adminUser) {
        navigate('/admin-login');
        return;
      }

      setAdminData(adminUser);
      await loadResponses();
    };
    
    checkAuth();
  }, [navigate]);

  const loadResponses = async () => {
    try {
      const { data, error } = await supabase
        .from('survey_responses')
        .select(`
          *,
          survey_users(full_name, position, organization, phone, province, email),
          survey_responses_section2(*),
          survey_responses_section3(*)
        `)
        .order('created_at', { ascending: false });

      if (error) throw error;
      setResponses(data || []);
    } catch (error: any) {
      toast({
        title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        description: error.message,
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å database ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà CompleteSurveyViewer ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà
  const transformResponseData = (response) => {
    if (!response) {
      console.log('‚ùå No response data');
      return null;
    }

    console.log('üìä Section 1 fields:', {
      section1_knowledge_outcomes: response.section1_knowledge_outcomes,
      section1_application_outcomes: response.section1_application_outcomes,
      section1_changes_description: response.section1_changes_description,
    });

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Section 2 ‡πÅ‡∏•‡∏∞ 3
    const section2Data = response.survey_responses_section2?.[0] || {};
    const section3Data = response.survey_responses_section3?.[0] || {};

    console.log('üìä Section 2 data:', section2Data);
    console.log('üìä Section 3 data:', section3Data);

    const result = {
      respondent: {
        name: response.survey_users?.full_name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        position: response.survey_users?.position || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        organization: response.survey_users?.organization || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        province: response.survey_users?.province || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        email: response.survey_users?.email || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        phone: response.survey_users?.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        survey_date: new Date(response.created_at).toLocaleDateString('th-TH')
      },
      
      // ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1 - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å survey_responses table (‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)
      section1: {
        section1_knowledge_outcomes: response.section1_knowledge_outcomes || [],
        section1_application_outcomes: response.section1_application_outcomes || [],
        section1_application_other: response.section1_application_other || '',
        section1_changes_description: response.section1_changes_description || '',
        section1_problems_before: response.section1_problems_before || [],
        section1_knowledge_solutions: response.section1_knowledge_solutions || [],
        section1_knowledge_solutions_other: response.section1_knowledge_solutions_other || '',
        section1_knowledge_before: response.section1_knowledge_before || null,
        section1_knowledge_after: response.section1_knowledge_after || null,
        section1_it_usage: response.section1_it_usage || [],
        section1_it_usage_other: response.section1_it_usage_other || '',
        section1_it_level: response.section1_it_level || null,
        section1_cooperation_usage: response.section1_cooperation_usage || [],
        section1_cooperation_usage_other: response.section1_cooperation_usage_other || '',
        section1_cooperation_level: response.section1_cooperation_level || null,
        section1_funding_usage: response.section1_funding_usage || [],
        section1_funding_usage_other: response.section1_funding_usage_other || '',
        section1_funding_level: response.section1_funding_level || null,
        section1_culture_usage: response.section1_culture_usage || [],
        section1_culture_usage_other: response.section1_culture_usage_other || '',
        section1_culture_level: response.section1_culture_level || null,
        section1_green_usage: response.section1_green_usage || [],
        section1_green_usage_other: response.section1_green_usage_other || '',
        section1_green_level: response.section1_green_level || null,
        section1_new_dev_usage: response.section1_new_dev_usage || [],
        section1_new_dev_usage_other: response.section1_new_dev_usage_other || '',
        section1_new_dev_level: response.section1_new_dev_level || null,
        section1_success_factors: response.section1_success_factors || [],
        section1_success_factors_other: response.section1_success_factors_other || '',
        section1_success_description: response.section1_success_description || '',
        section1_overall_change_level: response.section1_overall_change_level || null
      },
      
      // ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2 - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å survey_responses_section2 table (‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)
      section2: {
        section2_data_types: section2Data.section2_data_types || [],
        section2_data_types_other: section2Data.section2_data_types_other || '',
        section2_data_sources: section2Data.section2_data_sources || '',
        section2_partner_organizations: section2Data.section2_partner_organizations || [],
        section2_partner_organizations_other: section2Data.section2_partner_organizations_other || '',
        section2_partner_participation: section2Data.section2_partner_participation || '',
        section2_data_benefits: section2Data.section2_data_benefits || [],
        section2_data_level: section2Data.section2_data_level || null,
        section2_continued_development: section2Data.section2_continued_development || '',
        section2_applications: section2Data.section2_applications || {},
        section2_network_expansion: section2Data.section2_network_expansion || {}
      },
      
      // ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3 - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å survey_responses_section3 table (‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)
      section3: {
        budget_system_development: section3Data.budget_system_development || null,
        budget_knowledge_development: section3Data.budget_knowledge_development || null,
        cooperation_between_agencies: section3Data.cooperation_between_agencies || null,
        innovation_ecosystem: section3Data.innovation_ecosystem || null,
        government_digital_support: section3Data.government_digital_support || null,
        digital_infrastructure: section3Data.digital_infrastructure || null,
        digital_mindset: section3Data.digital_mindset || null,
        learning_organization: section3Data.learning_organization || null,
        it_skills: section3Data.it_skills || null,
        internal_communication: section3Data.internal_communication || null,
        policy_continuity: section3Data.policy_continuity || null,
        policy_stability: section3Data.policy_stability || null,
        leadership_importance: section3Data.leadership_importance || null,
        staff_importance: section3Data.staff_importance || null,
        communication_to_users: section3Data.communication_to_users || null,
        reaching_target_groups: section3Data.reaching_target_groups || null
      }
    };

    console.log('üéØ Final transformed result:', result);
    return result;
  };

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö
  const addSampleDataIfEmpty = (transformedData) => {
    if (!transformedData) return null;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
    const result = JSON.parse(JSON.stringify(transformedData));

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Section 1 ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    if ((!result.section1.section1_knowledge_outcomes || result.section1.section1_knowledge_outcomes.length === 0) &&
        (!result.section1.section1_application_outcomes || result.section1.section1_application_outcomes.length === 0)) {
      
      result.section1 = {
        ...result.section1,
        section1_knowledge_outcomes: [
          "‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡∏Å",
          "‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏ß‡∏á‡∏´‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á"
        ],
        section1_application_outcomes: [
          "‡∏ô‡∏≥‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏ö‡∏ó‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á",
          "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÑ‡∏î‡πâ"
        ],
        section1_application_other: "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ AI ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        section1_changes_description: "‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏¢‡∏∞‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå",
        section1_problems_before: [
          "‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô",
          "‡∏Ç‡∏≤‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á"
        ],
        section1_knowledge_solutions: [
          "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á/‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô",
          "‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô"
        ],
        section1_knowledge_before: 3,
        section1_knowledge_after: 8,
        section1_it_usage: [
          "‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πâ‡∏≤ ‡∏ï‡∏£‡∏á‡∏à‡∏∏‡∏î",
          "‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á"
        ],
        section1_it_level: 7,
        section1_cooperation_usage: [
          "‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏Å‡∏±‡∏ö‡∏£‡∏±‡∏ê ‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô ‡πÅ‡∏•‡∏∞‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô"
        ],
        section1_cooperation_level: 6,
        section1_funding_usage: [
          "‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏∏‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏±‡∏ê ‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô ‡∏´‡∏∏‡πâ‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‡∏û‡∏±‡∏ô‡∏ò‡∏ö‡∏±‡∏ï‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á Crowdfunding"
        ],
        section1_funding_level: 5,
        section1_culture_usage: [
          "‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏£‡∏±‡∏Å‡∏©‡πå‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏á‡∏≤‡∏ô‡∏´‡∏±‡∏ï‡∏ñ‡∏Å‡∏£‡∏£‡∏° ‡∏õ‡∏£‡∏∞‡πÄ‡∏û‡∏ì‡∏µ ‡πÅ‡∏•‡∏∞‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô"
        ],
        section1_culture_level: 6,
        section1_green_usage: [
          "‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡πÑ‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤ ‡∏•‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢ ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°"
        ],
        section1_green_level: 5,
        section1_new_dev_usage: [
          "‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡πÑ‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡πâ‡∏ô‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏° ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢ ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏±‡∏Å‡∏©‡∏∞"
        ],
        section1_new_dev_level: 4,
        section1_success_factors: [
          "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô",
          "‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏†‡∏≤‡∏Ñ‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö ‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°"
        ],
        section1_success_description: "‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà",
        section1_overall_change_level: 7
      };
    }

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Section 2 ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    if (!result.section2.section2_data_types || result.section2.section2_data_types.length === 0) {
      result.section2 = {
        ...result.section2,
        section2_data_types: [
          "‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£",
          "‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡∏¢‡∏∞ ‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢ PM 2.5 ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô"
        ],
        section2_data_sources: "‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏°‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà",
        section2_partner_organizations: [
          "‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
          "‡∏†‡∏≤‡∏Ñ‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô"
        ],
        section2_partner_participation: "‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ",
        section2_data_benefits: [
          "‡∏•‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£/‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡πÄ‡∏ß‡∏•‡∏≤",
          "‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô"
        ],
        section2_data_level: 6,
        section2_continued_development: "‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏à‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö AI ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°",
        section2_applications: {
          app1_name: "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏∞‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞",
          app1_method_develop: true,
          app1_method_other: true,
          app1_method_other_detail: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏à‡∏≤‡∏Å startup ‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô",
          app2_name: "‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ä‡∏∏‡∏°‡∏ä‡∏ô",
          app2_method_buy: true
        },
        section2_network_expansion: {
          org1: "‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
          cooperation1: "‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
          org2: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó Smart City Solutions",
          cooperation2: "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö IoT ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡∏≠‡∏á"
        }
      };
    }

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Section 3 ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    if (!result.section3.budget_system_development) {
      result.section3 = {
        budget_system_development: 3,
        budget_knowledge_development: 4,
        cooperation_between_agencies: 4,
        innovation_ecosystem: 3,
        government_digital_support: 3,
        digital_infrastructure: 3,
        digital_mindset: 4,
        learning_organization: 4,
        it_skills: 3,
        internal_communication: 4,
        policy_continuity: 4,
        policy_stability: 3,
        leadership_importance: 5,
        staff_importance: 4,
        communication_to_users: 3,
        reaching_target_groups: 3
      };
    }

    return result;
  };

  const handleViewResponse = (response) => {
    console.log('üîç Raw response data:', response); // Debug ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    let transformedData = transformResponseData(response);
    
    console.log('üîÑ Transformed data (before sample):', transformedData); // Debug ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß
    
    // ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô (‡πÅ‡∏ï‡πà‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô)
    // transformedData = addSampleDataIfEmpty(transformedData);
    
    console.log('‚úÖ Final data for display:', transformedData); // Debug ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    
    setSelectedResponse({ ...response, transformedData });
    setIsViewerOpen(true);
    document.body.style.overflow = 'hidden';
  };

  const handleCloseViewer = () => {
    setIsViewerOpen(false);
    setSelectedResponse(null);
    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£ scroll ‡∏Ç‡∏≠‡∏á body
    document.body.style.overflow = 'unset';
  };

  const handleDeleteResponse = async (responseId) => {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ô‡∏µ‡πâ?')) return;

    try {
      const { error } = await supabase
        .from('survey_responses')
        .delete()
        .eq('id', responseId);

      if (error) throw error;

      toast({
        title: "‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        description: "‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß",
      });

      await loadResponses();
    } catch (error: any) {
      toast({
        title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        description: error.message,
        variant: "destructive",
      });
    }
  };

  const handleLogout = async () => {
    await supabase.auth.signOut();
    navigate('/admin-login');
  };

  const getCompletionStatus = (response) => {
    const hasSection1 = response.section1_knowledge_outcomes?.length > 0;
    const hasSection2 = response.survey_responses_section2?.length > 0;
    const hasSection3 = response.survey_responses_section3?.length > 0;
    
    if (hasSection1 && hasSection2 && hasSection3) return '‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå';
    if (hasSection1 && hasSection2) return '‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1-2';
    if (hasSection1) return '‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1';
    return '‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå';
  };

  const getStatusColor = (status) => {
    switch (status) {
      case '‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå': return 'bg-green-100 text-green-800';
      case '‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1-2': return 'bg-yellow-100 text-yellow-800';
      case '‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1': return 'bg-orange-100 text-orange-800';
      default: return 'bg-red-100 text-red-800';
    }
  };

  // Handle ESC key to close modal
  useEffect(() => {
    const handleEsc = (event) => {
      if (event.keyCode === 27) {
        handleCloseViewer();
      }
    };
    document.addEventListener('keydown', handleEsc);
    return () => {
      document.removeEventListener('keydown', handleEsc);
    };
  }, []);

  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <div>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary/5 to-secondary/5">
      <div className="container mx-auto p-6">
        <div className="flex justify-between items-center mb-6">
          <div>
            <h1 className="text-2xl font-bold">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏° SROI</h1>
            <p className="text-muted-foreground">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ‡∏Ñ‡∏∏‡∏ì{adminData?.full_name}</p>
          </div>
          <Button variant="outline" onClick={handleLogout}>
            ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
          </Button>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">‡∏ú‡∏π‡πâ‡∏ï‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</CardTitle>
              <Users className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{responses.length}</div>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">‡∏ï‡∏≠‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</CardTitle>
              <FileText className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">
                {responses.filter(r => getCompletionStatus(r) === '‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå').length}
              </div>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</CardTitle>
              <BarChart3 className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">
                {responses.filter(r => getCompletionStatus(r) !== '‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå').length}
              </div>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</CardTitle>
              <FileText className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">
                {responses.filter(r => 
                  new Date(r.created_at).toDateString() === new Date().toDateString()
                ).length}
              </div>
            </CardContent>
          </Card>
        </div>

        <Card>
          <CardHeader>
            <CardTitle>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</CardTitle>
          </CardHeader>
          <CardContent>
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•</TableHead>
                  <TableHead>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</TableHead>
                  <TableHead>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô</TableHead>
                  <TableHead>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</TableHead>
                  <TableHead>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</TableHead>
                  <TableHead>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö</TableHead>
                  <TableHead>‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {responses.map((response) => (
                  <TableRow key={response.id}>
                    <TableCell className="font-medium">
                      {response.survey_users?.full_name}
                    </TableCell>
                    <TableCell>{response.survey_users?.position}</TableCell>
                    <TableCell>{response.survey_users?.organization}</TableCell>
                    <TableCell>{response.survey_users?.phone}</TableCell>
                    <TableCell>
                      <Badge className={getStatusColor(getCompletionStatus(response))}>
                        {getCompletionStatus(response)}
                      </Badge>
                    </TableCell>
                    <TableCell>
                      {new Date(response.created_at).toLocaleDateString('th-TH')}
                    </TableCell>
                    <TableCell>
                      <div className="flex space-x-2">
                        <Button
                          size="sm"
                          variant="outline"
                          onClick={() => handleViewResponse(response)}
                          className="text-blue-600 hover:text-blue-900"
                        >
                          <Eye className="h-4 w-4" />
                        </Button>
                        <Button
                          size="sm"
                          variant="destructive"
                          onClick={() => handleDeleteResponse(response.id)}
                        >
                          <Trash2 className="h-4 w-4" />
                        </Button>
                      </div>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </CardContent>
        </Card>

        {/* Custom Survey Viewer Modal */}
        {isViewerOpen && (
          <div 
            className="fixed inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center p-4"
            onClick={(e) => {
              if (e.target === e.currentTarget) {
                handleCloseViewer();
              }
            }}
          >
            <div className="bg-white rounded-lg w-[98vw] h-[98vh] flex flex-col max-w-none shadow-2xl">
              {/* Header with Debug Controls */}
              <div className="flex justify-between items-center p-6 border-b bg-gray-50 rounded-t-lg flex-shrink-0">
                <div className="flex-1 min-w-0">
                  <h2 className="text-xl font-semibold text-gray-900 truncate">
                    üìã ‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏° - {selectedResponse?.survey_users?.full_name}
                  </h2>
                  <p className="text-sm text-gray-600 mt-1 truncate">
                    {selectedResponse?.survey_users?.organization} ‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö: {selectedResponse && new Date(selectedResponse.created_at).toLocaleDateString('th-TH')}
                  </p>
                  
                  {/* Debug Buttons */}
                  <div className="flex space-x-2 mt-2">
                    <button
                      onClick={() => {
                        const realData = transformResponseData(selectedResponse);
                        setSelectedResponse({ ...selectedResponse, transformedData: realData });
                      }}
                      className="px-3 py-1 text-xs bg-blue-500 text-white rounded hover:bg-blue-600"
                    >
                      ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
                    </button>
                    <button
                      onClick={() => {
                        const realData = transformResponseData(selectedResponse);
                        const sampleData = addSampleDataIfEmpty(realData);
                        setSelectedResponse({ ...selectedResponse, transformedData: sampleData });
                      }}
                      className="px-3 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600"
                    >
                      ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                    </button>
                  </div>
                </div>
                <div className="flex items-center space-x-2 ml-4">
                  <span className="text-xs text-gray-500">‡∏Å‡∏î ESC ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î</span>
                  <button
                    onClick={handleCloseViewer}
                    className="text-gray-500 hover:text-gray-700 text-2xl font-bold w-10 h-10 flex items-center justify-center rounded-full hover:bg-gray-200 transition-colors flex-shrink-0"
                    title="‡∏õ‡∏¥‡∏î (ESC)"
                  >
                    <X className="h-5 w-5" />
                  </button>
                </div>
              </div>
              
              {/* Content */}
              <div className="flex-1 overflow-y-auto bg-gray-50">
                <div className="p-6">
                  {selectedResponse && (
                    <CompleteSurveyViewer 
                      data={selectedResponse.transformedData || transformResponseData(selectedResponse)} 
                    />
                  )}
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default AdminDashboard;
